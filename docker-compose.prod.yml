name: list_am_bot
services:
  list_am_bot.postgres:
    container_name: list_am_bot.postgres
    environment:
      - POSTGRES_DB=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    command: ['postgres', '-c', 'log_statement=all']
    image: postgres:16-alpine
    logging:
      options:
        max-size: 10m
        max-file: '3'
    mem_limit: 1g
    cpus: 1.00
    healthcheck:
      test:
        ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USERNAME} -d ${POSTGRES_NAME}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    volumes:
      - ./pg/data:/var/lib/postgresql/data
      - /opt/backup/postgres:/opt/backup
    ports:
      - '127.0.0.1:5432:5432'
    networks:
      - listambot_network

  list_am_bot.npm:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: list_am_bot.npm
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - './npm/data:/data'
      - './npm/letsencrypt:/etc/letsencrypt'
    networks:
      - listambot_network

  list_am_bot.flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: list_am_bot.flaresolverr
    env_file: .env
    environment:
      - LOG_FILE=${LOG_FILE:-none}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Asia/Yerevan
    ports:
      - '${FLARESOLVERR_PORT:-8191}:8191'
    volumes:
      - ./flaresolver:/config
    restart: unless-stopped

  list_am_bot.core:
    image: app_image
    container_name: list_am_bot.core
    entrypoint: /tmp/entrypoint.sh core
    env_file:
      - ./.env
    restart: unless-stopped
    depends_on:
      - list_am_bot.postgres
    stdin_open: true
    tty: true
    networks:
      - listambot_network

networks:
  listambot_network:
    external: true
